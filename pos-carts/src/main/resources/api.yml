openapi: "3.0.0"
info:
  version: 1.0.0
  title: Products
  license:
    name: MIT
paths:
  /carts:
    post:
      summary: Create a new, empty, cart
      operationId: newCart
      tags:
        - carts
      responses:
        '200':
          description: A new cart
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /carts/{cartId}:
    parameters:
      - name: cartId
        in: path
        required: true
        description: The id of the cart
        schema:
          type: long
    get:
      summary: Info for a specific cart
      operationId: showCartById
      tags:
        - cart
      responses:
        '200':
          description: Cart info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Mutate a specific cart by id
      operationId: mutateCartById
      tags:
        - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
      responses:
        '200':
          description: Cart info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Delete a cart by id
      operationId: deleteCartById
      responses:
        200:
          description: Successful deletion
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: double
        image:
          type: string
    Item:
      type: object
      required:
        - product
        - quantity
      properties:
        product:
          $ref: "#/components/schemas/Product"
        quantity:
          type: number
          format: int
    Cart:
      type: object
      required:
        - items
        - cartId
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
        cartId:
          type: number
          format: long
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string